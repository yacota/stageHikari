### BASIC ###
stagemonitor.applicationName=sampleName
stagemonitor.instanceName=sampleInstanceName

# Include/exclude (previously this has to be configured in aop.xml, now stagemonitor don't use agents)

# Properties para upgrade a 0.13, de momento desactivado
stagemonitor.instrument.include=ctv.stageissue
stagemonitor.instrument.exclude=

# If set to false stagemonitor will be completely deactivated.
stagemonitor.active=true
# If active, stagemonitor will collect internal performance data (by now only writen to disk https://github.com/stagemonitor/stagemonitor/issues/63#issuecomment-83643971)
stagemonitor.internal.monitoring=false
# The interval in seconds a reload of all configuration sources is performed. Set to a value below 1 to deactivate periodic reloading the configuration.(default to 60)
stagemonitor.configuration.reload.interval=-1
# CONSOLE ONE : The amount of time between console reports (in seconds). To deactivate console reports, set this to a value below 1. (default 60)
stagemonitor.reporting.interval.console=-1
# CONSOLE ONE : Whether or not call stacks should be logged.
stagemonitor.profiler.logCallStacks=false
# Whether or not to expose all metrics as MBeans. (default is true)
stagemonitor.reporting.jmx=false
# A comma separated list of plugin names (the simple class name) that should not be active.
#CorePlugin,RequestMonitorPlugin,SpringMvcPlugin,JdbcPlugin,JvmPlugin,WebPlugin,LoggingPlugin,OsPlugin
stagemonitor.plugins.disabled=LoggingPlugin,OsPlugin
# Whether or not a timer for the cpu time of executions should be created.(default false)
stagemonitor.requestmonitor.cpuTime=true


### LOG DASHBOARD ###
# When set, call stacks will be deleted automatically after the specified interval In case you do not specify a time unit like d (days), m (minutes), h (hours), ms (milliseconds) or w (weeks), milliseconds is used as default unit.
stagemonitor.requestmonitor.requestTraceTTL=1w

### ES ###
#The URL of the elasticsearch server that stores the call stacks. If the URL is not provided, the call stacks won't get stored.
stagemonitor.elasticsearch.url=${stagemonitor.elasticSearch}


### GRAPHITE ###
# The name of the host where graphite is running. This setting is mandatory, if you want to use the grafana dashboards.
stagemonitor.reporting.graphite.hostName=${stagemonitor.graphite}
# The amount of time between the metrics are reported to graphite (in seconds). To deactivate graphite reporting, set this to a value below 1, or don't provide stagemonitor.reporting.graphite.hostName.(default to 60)
stagemonitor.reporting.interval.graphite=60


### JDBC ###
# Whether or not sql statements should be included in the call stack.
stagemonitor.profiler.jdbc.collectSql=true
# Whether or not db execution time should be collected per request group If set to true, a timer will be created for each request to record the total db time per request.(default false)
stagemonitor.jdbc.collectDbTimePerRequest=true


### EHCACHE ####
stagemonitor.ehcache.name=defaultCache

#### OPTIONS ###
# Whether or not HTTP headers should be collected with a call stack.
stagemonitor.requestmonitor.http.collectHeaders=true
# Whether or not the user-agent header should be parsed and analyzed to get information about the browser, device type and operating system.
stagemonitor.requestmonitor.http.parseUserAgent=true
# The Real User Monitoring feature collects the browser, network and overall percieved execution time from the user's perspective. When activated, a piece of javascript will be injected to each html page that collects the data from real users and sends it back to the server. Servlet API 3.0 or higher is required for this.
stagemonitor.web.rum.enabled=false
# If active, stagemonitor will inject a widget in the web site containing the calltrace metrics. Requires Servlet-Api >= 3.0(default false)
stagemonitor.web.widget.enabled=false
# Whether or not browser, network and overall execution time should be collected per request group. If set to true, four additional timers will be created for each request group to record the page rendering time, dom processing time, network time and overall time per request. If set to false, the times of all requests will be aggregated. (default false)
stagemonitor.web.collectPageLoadTimesPerRequest=true
#Request paths that should not be monitored. A value of /aaa means, that all paths starting with /aaa should not be monitored. It's recommended to not monitor static resources, as they are typically not interesting to monitor but consume resources when you do.
stagemonitor.web.paths.excluded=
#Sometimes you only want to monitor forwarded requests, for example if you have a rewrite filter that translates a external URI (/a) to a internal URI (/b). If only /b should be monitored,set the value to true.
stagemonitor.web.monitorOnlyForwardedRequests=false

